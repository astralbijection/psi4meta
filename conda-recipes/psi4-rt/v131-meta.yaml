package:
    name: psi4-rt
    version: {{ ltrtver }}

build:
    number: 0                                  # [linux]  1.2_1: removes gpu_dfcc
    number: 0                                  # [osx]
    binary_relocation: true
    skip: true                                 # [win]

requirements:
    host:
        - python {{ python }}
        - dftd3 {{ dftd3 }}
        # - pylibefp {{ pylibefp }}
        - gcp {{ gcp }}
#        - mp2d {{ mp2d }}
        - openfermionpsi4 {{ openfermionpsi4 }}
        - resp {{ resp }}
        - snsmp2 {{ snsmp2 }}
        - v2rdm_casscf {{ v2rdm_casscf }} *{{ v2rdm_casscf_bld }}
    run:
        - {{ pin_compatible('python', max_pin='x.x') }}
        - {{ pin_compatible('dftd3', max_pin='x.x') }}
        - pylibefp {{ pylibefp }}*  # can't do max_pin while version is +git
        - {{ pin_compatible('gcp', max_pin='x.x') }}
#        - {{ pin_compatible('mp2d', max_pin='x.x') }}
        - {{ pin_compatible('openfermionpsi4', max_pin='x.x') }}
        - {{ pin_compatible('resp', max_pin='x.x') }}
        - {{ pin_compatible('snsmp2', max_pin='x.x') }}
      {% for package in resolved_packages('host') %}
       {% if package.startswith('v2rdm_casscf') or package.startswith('gpu_dfcc') %}
        - {{ package }}
       {% endif %}
      {% endfor %}

test:
    requires:
        - gpu_dfcc                              # [linux]  # test, even if too fat to include
        - psi4 {{ psi4ver }}
    imports:
        - pylibefp
        - gpu_dfcc                              # [linux]
        - openfermionpsi4
        - resp
        - snsmp2
        - v2rdm_casscf
        - psi4
    files:
        - tests/openfermionpsi4_demo.py
    commands:
        - psi4 --test
        - python -c "import gpu_dfcc, sys; sys.exit(gpu_dfcc.test())"  # [linux]
        - python -c "import pylibefp, sys; sys.exit(pylibefp.test('long'))"
        - python -c "import resp, sys; sys.exit(resp.test('long'))"
        - python -c "import v2rdm_casscf as v2; import sys; sys.exit(v2.test('long', extras=['-k', 'psiapi']))"
        - python -c "import psi4, pylibefp, resp, v2rdm_casscf; print('*** Psi4 {}, pylibefp {}, resp {}, v2rdm_casscf {} compatible!'.format(psi4.__version__, pylibefp.__version__, resp.__version__, v2rdm_casscf.__version__))"
        - python -c "import psi4, gpu_dfcc; print('*** Psi4 {}, gpu_dfcc {} compatible!'.format(psi4.__version__, gpu_dfcc.__version__))"  # [linux]
        - python tests/openfermionpsi4_demo.py

about:
    home: http://psicode.org
    # dev_url:
    # doc_url:
    # doc_source_url:
    # license:
    # license_url:
    # license_file:
    # license_family:
    summary: "Optional run-time add-ons to Psi4"
    # description: >

# NOTES:
# * below is perfectly good in requirements/host, but cudatools is enormous
#        - gpu_dfcc {{ gpu_dfcc }}              # [linux]
